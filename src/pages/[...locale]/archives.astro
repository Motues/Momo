---
import MainPageLayout from '@layouts/MainPageLayout.astro'
import Cover from '@components/Cover.astro'

import { siteConfig } from '@/config'
import { formatDateToArchive } from '@utils/url-utils'
import { getBlogEntrySort } from '@utils/content-utils'
import i18nit from '@i18n/translation'

import { getCollection } from 'astro:content'
import { i18n } from "astro:config/client";
import { getRelativeLocaleUrl } from '@utils/url-utils';

const { locale = i18n!.defaultLocale } = Astro.params;

const currentLang = i18n.locales.includes(locale) ? locale : i18n!.defaultLocale;
const t = i18nit(currentLang);

export async function getStaticPaths() {
	return i18n?.locales.map(locale => ({ params: { locale: locale == i18n?.defaultLocale ? undefined : (locale as string) } }));
}

// 获取所有博客文章并按发布日期降序排序
const allBlogPosts = await getBlogEntrySort(currentLang);

// 按年份分组文章
const postsByYear = allBlogPosts.reduce((acc, post) => {
  const year = post.data.pubDate.getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof allBlogPosts>);

const pageTitle = t("header.archive") + " - " + siteConfig.title;
const postNumber = allBlogPosts.length;
const indexPage = getRelativeLocaleUrl(currentLang, "");
---

<MainPageLayout title={pageTitle} lang={currentLang}>
    <div class="archives mx-auto w-full max-w-[var(--page-width)]">
        <Cover title={t("cover.title.archive")} subTitle={t("cover.subTitle.archive", {count: postNumber})}/>
        
        <div class="py-6 mx-auto text-[var(--text-color)]">
            {Object.keys(postsByYear).sort().reverse().map(year => (
                <div>
                    <h2 class="text-2xl font-bold my-4">{year}</h2>
                    <div class="">
                            {postsByYear[Number(year)].map((post, index, array) => (
                                <div class="pb-2">
                                    <a href={getRelativeLocaleUrl(currentLang, `/blog/${post.id}`)} 
                                    class="flex items-center gap-2 hover:bg-[var(--button-hover-color)] p-2 rounded transition-colors duration-200 group">
                                        <span class=" text-[var(--text-color)]/70 min-w-[100px] font-mono">
                                            {formatDateToArchive(post.data.pubDate)}
                                        </span>
                                        <span class="text-lg group-hover:pl-2 group-hover:text-[var(--link-color)] group-hover:font-bold transition-all duration-200">
                                            {post.data.title}
                                        </span>
                                    </a>
                                </div>
                            ))}
                    </div>
                </div>
            ))}
        </div>
    </div>
</MainPageLayout>