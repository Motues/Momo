---
import "@styles/global.css"
import { Icon } from "astro-icon/components"
import { profileConfig, siteConfig } from "@/config"
import ThemeIcon from "./control/ThemeIcon.astro"
import { baseUrl } from "@utils/url-utils"

import { i18n } from "astro:config/client";
import i18nit from '@i18n/translation'
import { getRelativeLocaleUrl } from '@utils/url-utils';

const { locale = i18n!.defaultLocale } = Astro.params;

const currentLang = i18n.locales.includes(locale) ? locale : i18n!.defaultLocale;
const t = i18nit(currentLang);


// 获取当前页面在不同语言下的路径
const getLocalePath = (path: string, targetLocale: string) => {
  const currentPath = Astro.url.pathname;
  const defaultLocale = i18n?.defaultLocale || "zh-cn";
  
  // 移除当前语言前缀
  let basePath = currentPath;
  if (currentLang && currentLang !== defaultLocale) {
    basePath = currentPath.replace(`/${currentLang}`, "") || "/";
  }
  
  // 添加目标语言前缀（默认语言不需要前缀）
  if (targetLocale && targetLocale !== defaultLocale) {
    return `/${targetLocale}${basePath}`;
  }
  
  return basePath;
};

const indexPage = getRelativeLocaleUrl(currentLang, "/");
const archivesPage = getRelativeLocaleUrl(currentLang, "/archives/");
const friendsPage = getRelativeLocaleUrl(currentLang, "/friends/");
const aboutPage = getRelativeLocaleUrl(currentLang, "/about/");
---

<!-- header -->
<div class="flex items-center py-4 text-[var(--text-color)] max-w-[min(1024px,90vw)] mx-auto">
    <!-- logo -->
    <div class="pr-4 py-2 font-bold z-30">
        <a href={ indexPage } >
            <span class="text-lg font-bold hover:opacity-60 transition-opacity">{ siteConfig.title }</span>
        </a>
    </div>
    <!-- nav_bar -->
    <div id="nav-bar" class="hidden md:flex absolute left-1/2 transform -translate-x-1/2 justify-center items-center text-lg font-bold">
        <div id="nav-bar-list" class="transition relative z-10 flex max-w-max flex-1 items-center justify-center rounded-outer p-2 backdrop-blur rounded-xl bg-[color:var(--bg-color)]/20">
          <!-- 首页链接 -->
          <a href={ indexPage } class={`transition-colors rounded-lg px-3 py-1 mx-1 hover:text-current ${
              Astro.url.pathname === indexPage 
                  ? 'bg-[var(--button-hover-color)]' 
                  : 'hover:bg-[var(--button-hover-color)]'
              }`}>
              {t("header.home")}
          </a>
          <!-- 归档链接 -->
          <a href={ archivesPage } class={`transition-colors rounded-lg px-3 py-1 mx-1 hover:text-current ${
              Astro.url.pathname === archivesPage 
                  ? 'bg-[var(--button-hover-color)]' 
                  : 'hover:bg-[var(--button-hover-color)]'
              }`}>
              {t("header.archive")}
          </a>
          <!-- 关于链接 -->
          <a href={ aboutPage } class={`transition-colors rounded-lg px-3 py-1 mx-1 hover:text-current ${
              Astro.url.pathname === aboutPage 
                  ? 'bg-[var(--button-hover-color)]' 
                  : 'hover:bg-[var(--button-hover-color)]'
              }`}>
              {t("header.about")}
          </a>
          <!-- 友链链接 -->
          <a href={ friendsPage } class={`transition-colors rounded-lg px-3 py-1 mx-1 hover:text-current ${
              Astro.url.pathname === friendsPage 
                  ? 'bg-[var(--button-hover-color)]' 
                  : 'hover:bg-[var(--button-hover-color)]'
              }`}>
              {t("header.friends")}
          </a>
            <!-- <a href={ indexPage } class="transition-colors hover:bg-[var(--button-hover-color)] rounded-lg px-3 py-1 mx-1 hover:text-current">{t("header.home")}</a>
            <a href={ archivesPage } class="transition-colors hover:bg-[var(--button-hover-color)] rounded-lg px-3 py-1 mx-1 hover:text-current">{t("header.archive")}</a>
            <a href={ aboutPage } class="transition-colors hover:bg-[var(--button-hover-color)] rounded-lg px-3 py-1 mx-1 hover:text-current">{t("header.about")}</a>
            <a href={ friendsPage } class="transition-colors hover:bg-[var(--button-hover-color)] rounded-lg px-3 py-1 mx-1 hover:text-current">{t("header.friends")}</a> -->
        </div>
    </div>
    
    <!-- tools -->
    <div class="ml-auto flex gap-2 pl-4 py-2 justify-end z-30">
        <!-- Search -->
        <button id="search-button" class="flex items-center justify-center w-10 h-10 hover:bg-[var(--button-hover-color)] active:scale-90 rounded-lg hover:text-current border border-[var(--button-border-color)] transition-all duration-300">
            <Icon name="fa6-solid:magnifying-glass" class="w-4 h-4" />
        </button>
        <!-- Dark Mode -->
        <ThemeIcon class="flex items-center justify-center w-10 h-10 hover:bg-[var(--button-hover-color)] rounded-lg hover:text-current active:scale-90 border border-[var(--button-border-color)] transition-all duration-300"/>
        <!-- RSS -->
        <!-- <a href="/rss.xml" target="_blank" class="flex items-center justify-center w-10 h-10 hover:bg-[var(--button-hover-color)] active:scale-90 rounded-lg hover:text-current border border-[var(--button-border-color)] transition-all duration-300">
            <Icon name="simple-icons:rss" class="w-4 h-4" />
        </a> -->
        <!-- Language Switcher -->
        <div class="relative">
            <button id="language-button" class="flex items-center justify-center w-10 h-10 hover:bg-[var(--button-hover-color)] active:scale-90 rounded-lg hover:text-current border border-[var(--button-border-color)] transition-all duration-300">
                <Icon name="fa6-solid:globe" class="w-4 h-4" />
            </button>
            
          <!-- Language Dropdown Menu -->
          <div id="language-menu" class="hidden absolute right-0 mt-2 w-30 bg-[var(--bg-color)] border border-[var(--button-border-color)] rounded-lg shadow-lg z-50">
              <div class="py-1 text-right">
                  <!-- 中文链接 -->
                  <a href={getLocalePath("/", "zh-cn")} class=`block mx-2 my-1 p-2 text-sm rounded ${
                    currentLang === "zh-cn" ? "bg-[var(--button-hover-color)]" : "hover:bg-[var(--button-hover-color)]"}`>
                    {currentLang === "zh-cn" ? <Icon name="fa6-solid:circle" class="w-2 h-2 inline mr-2" /> : ""}
                    简体中文
                  </a>
                  <!-- 英文链接 -->
                  <a href={getLocalePath("/", "en")} class=`block mx-2 my-1 p-2 text-sm rounded ${
                    currentLang === "en" ? "bg-[var(--button-hover-color)]" : "hover:bg-[var(--button-hover-color)]"}`>
                    {currentLang === "en" ? <Icon name="fa6-solid:circle" class="w-2 h-2 inline mr-2" /> : ""}
                    English
                  </a>
              </div>
          </div>
        </div>
        <div class="relative md:hidden">
          <!-- Mobile Menu -->
          <button id="mobile-menu-button" class="flex items-center justify-center w-10 h-10 hover:bg-[var(--button-hover-color)] active:scale-90 rounded-lg hover:text-current border border-[var(--button-border-color)] transition-all duration-300">
              <Icon name="fa6-solid:align-justify" class="w-5 h-5" />
          </button>
              <!-- Mobile Menu -->
              <div id="mobile-menu" class="hidden absolute right-0 mt-2 w-30 bg-[var(--bg-color)] border border-[var(--button-border-color)] rounded-lg shadow-lg z-50">
                <div class="flex flex-col py-1">
                  <a href={ indexPage } class={`mx-2 my-1 p-2 text-sm rounded ${
                    Astro.url.pathname === indexPage 
                      ? 'bg-[var(--button-hover-color)]' 
                      : 'hover:bg-[var(--button-hover-color)]'
                  }`}>{t("header.home")}</a>
                  
                  <a href={ archivesPage } class={`mx-2 my-1 p-2 text-sm rounded ${
                    Astro.url.pathname === archivesPage 
                      ? 'bg-[var(--button-hover-color)]' 
                      : 'hover:bg-[var(--button-hover-color)]'
                  }`}>{t("header.archive")}</a>
                  
                  <a href={ aboutPage } class={`mx-2 my-1 p-2 text-sm rounded ${
                    Astro.url.pathname === aboutPage 
                      ? 'bg-[var(--button-hover-color)]' 
                      : 'hover:bg-[var(--button-hover-color)]'
                  }`}>{t("header.about")}</a>
                  
                  <a href={ friendsPage } class={`mx-2 my-1 p-2 text-sm rounded ${
                    Astro.url.pathname === friendsPage 
                      ? 'bg-[var(--button-hover-color)]' 
                      : 'hover:bg-[var(--button-hover-color)]'
                  }`}>{t("header.friends")}</a>
                </div>
              </div>
        </div>
    </div>
</div>

<script>
function initMobileNav() {
  const menuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  const languageMenu = document.getElementById('language-menu'); // 添加语言菜单引用

  // 防止重复绑定
  if (!menuButton || menuButton.dataset.bound === 'true') return;
  menuButton.dataset.bound = 'true';

  // 点击菜单按钮，切换菜单显示
  menuButton.addEventListener('click', (e) => {
    e.stopPropagation();
    // 关闭语言菜单
    languageMenu?.classList.add('hidden');
    // 切换移动端菜单
    mobileMenu?.classList.toggle('hidden');
  });

  // 点击外部区域关闭菜单
  document.addEventListener('click', (event) => {
    if (
      menuButton &&
      mobileMenu &&
      !menuButton.contains(event.target) &&
      !mobileMenu.contains(event.target)
    ) {
      mobileMenu.classList.add('hidden');
    }
  });
}

// 初次加载
document.addEventListener('DOMContentLoaded', initMobileNav);

// 路由切换后重新绑定（ClientRouter 兼容）
document.addEventListener('astro:after-swap', initMobileNav);
</script>
<script>
function initLanguageMenu() {
  const languageButton = document.getElementById('language-button');
  const languageMenu = document.getElementById('language-menu');
  const mobileMenu = document.getElementById('mobile-menu'); // 添加移动端菜单引用

  // 避免重复绑定
  if (!languageButton || languageButton.dataset.bound === 'true') return;
  languageButton.dataset.bound = 'true';

  // 点击按钮切换菜单
  languageButton.addEventListener('click', (e) => {
    e.stopPropagation(); // 防止触发外部点击关闭
    // 关闭移动端菜单
    mobileMenu?.classList.add('hidden');
    // 切换语言菜单
    languageMenu?.classList.toggle('hidden');
  });

  // 点击菜单外部关闭
  document.addEventListener('click', (event) => {
    if (
      languageButton &&
      languageMenu &&
      !languageButton.contains(event.target) &&
      !languageMenu.contains(event.target)
    ) {
      languageMenu.classList.add('hidden');
    }
  });
}
document.addEventListener('astro:page-load', initLanguageMenu);
document.addEventListener('astro:after-swap', initLanguageMenu);
</script>


{import.meta.env.PROD && 
<script is:inline define:vars={{ scriptUrl: baseUrl('/pagefind/pagefind.js') }}>
function initPagefind() {
  // 如果已经存在 Pagefind 实例，就直接触发 ready
  if (window.pagefind && typeof window.pagefind.search === 'function') {
    document.dispatchEvent(new CustomEvent('pagefindready'));
    return;
  }
  // 防止重复加载
  if (window.pagefindLoading) return;
  window.pagefindLoading = true;

  // 加载 Pagefind
  fetch(scriptUrl, { method: 'HEAD' })
    .then((response) => {
      if (!response.ok) throw new Error(`Pagefind script not found: ${response.status}`);
      return import(scriptUrl);
    })
    .then(async (pagefind) => {
      await pagefind.options({ 
        excerptLength: 20
     });
      window.pagefind = pagefind;
      document.dispatchEvent(new CustomEvent('pagefindready'));
      // console.log('Pagefind initialized successfully');
    })
    .catch((error) => {
      console.error('Failed to load Pagefind:', error);
      window.pagefind = {
        search: () => Promise.resolve({ results: [] }),
        options: () => Promise.resolve(),
      };
      document.dispatchEvent(new CustomEvent('pagefindloaderror'));
    });
    // console.log('Pagefind loading...');
}
document.addEventListener('astro:page-load', initPagefind);

document.addEventListener('astro:after-swap', initPagefind);
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initPagefind);
} else {
  initPagefind();
}
</script>
}
